name: Build and Publish Python Package

on:
  push:
    branches:
      - "**" 
  pull_request:
    branches:
      - "**"  # Runs on all branches when a PR is created

jobs:
  build:
    name: Build Python Package
    runs-on: ubuntu-latest

    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build

      - name: Build package
        run: |
          python -m build

  deploy:
    name: Deploy to PyPI and GitHub Releases
    runs-on: ubuntu-latest
    needs: build  # Ensures build completes first
    if: github.ref == 'refs/heads/main'  # Only runs on main branch

    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build

      - name: Build package
        run: |
          python -m build

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.PYPI_API_TOKEN }}

      - name: Get package version
        id: get_version
        run: |
          echo "VERSION=$(python -c 'import pyCKW; print(pyCKW.__version__)')" >> $GITHUB_ENV

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ env.VERSION }}
          name: Release v${{ env.VERSION }}
          body: "Automated release for version v${{ env.VERSION }}"
          draft: false
          prerelease: false
          files: dist/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
